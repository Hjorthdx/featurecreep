@tailwind base;
@tailwind components;
@tailwind utilities;


@layer base {
  .font-outline-1 {
      -webkit-text-stroke: 1px black;
    }
  .font-outline-2 {
    -webkit-text-stroke: 2px black;
  }
  .font-outline-4 {
    -webkit-text-stroke: 4px black;
  }
}

/* TODO: Fix this. I need to figure out how to make use of tailwind for these dynamic classes. Only found solutions for data-state that can then be open or closed for instance.
          Not sure how to make it work for data-invalid and valid when they are just that I guess (?) */
.formLabel[data-invalid] {
  color: red;
}
.formControl[data-invalid] {
  --tw-shadow-color: red;
}
.formControl[data-invalid]:focus {
  --tw-shadow-color: red;
}
.formControl[data-invalid]:hover {
  --tw-shadow-color: red;
}


/* TODO: Is there a nicer way to do this than force style with !important?*/
@import '../../node_modules/@radix-ui/colors/amber.css';

.thumb {
  background-color: var(--amber-3);
  border: 3px solid var(--amber-3) !important;
  border-radius: 0.25rem;
}

.thumb.selected {
  background-color: var(--amber-5);
  border: 3px solid var(--amber-8) !important;
  border-radius: 0.25rem;
}

.thumb:hover {
  background-color: var(--amber-4);
  border: 3px solid var(--amber-7) !important;
  border-radius: 0.25rem;
}

.carousel {
  display: flex;
  justify-content: center;
}

.imageSlide {
  width: auto !important;
}