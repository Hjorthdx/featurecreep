// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    //url      = "file:./db.sqlite"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

model Example {
    id   String  @id @default(cuid())
    text String?
}

model PomodoroTimer {
    id        String   @id @default(cuid())
    mode      String   @default("work")
    createdAt DateTime @default(now())
    duration  Int      @default(25)
}

model PomodoroFormat {
    id                String  @id @default(cuid())
    userId            String
    name              String
    workDuration      String
    breakDuration     String
    longBreakDuration String
    autoStartTimer    Boolean @default(false)
    user              User    @relation(fields: [userId], references: [id])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.LongText
    access_token      String? @db.LongText
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.LongText
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id                       String           @id @default(cuid())
    name                     String?
    email                    String?          @unique
    emailVerified            DateTime?
    image                    String?
    accounts                 Account[]
    sessions                 Session[]
    pomodoroFormats          PomodoroFormat[]
    selectedPomodoroFormatId String?
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
