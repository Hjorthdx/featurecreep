// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    //url      = "file:./db.sqlite"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model DuneGame {
    id         String @id @default(cuid())
    user       User   @relation(fields: [userId], references: [id])
    userId     String
    userLeader String

    name String?
    note String?

    firstPosition  String
    secondPosition String
    thirdPosition  String
    fourthPosition String

    firstPlacement  String
    secondPlacement String
    thirdPlacement  String
    fourthPlacement String

    @@index([userId])
}

model PomodoroTimer {
    id        String   @id @default(cuid())
    mode      String   @default("work")
    createdAt DateTime @default(now())
    duration  Int      @default(25)
    userId    String
    user      User     @relation(fields: [userId], references: [id])

    @@index([userId])
}

model PomodoroFormat {
    id                String  @id @default(cuid())
    userId            String
    name              String
    workDuration      String
    breakDuration     String
    longBreakDuration String
    autoStartTimer    Boolean @default(false)
    user              User    @relation(fields: [userId], references: [id])

    @@index([userId])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.LongText
    access_token      String? @db.LongText
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.LongText
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]

    pomodoroFormats          PomodoroFormat[]
    selectedPomodoroFormatId String           @default("DEFAULT_POMODORO_FORMAT_ID")
    PomodoroTimers           PomodoroTimer[]

    duneGames DuneGame[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
